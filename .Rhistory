source("C:/Users/EmilB/OneDrive/Escritorio/SIG/Proyecto-Cambio-Climatico-SIG/project_script.R")
source("C:/Users/EmilB/OneDrive/Escritorio/SIG/Proyecto-Cambio-Climatico-SIG/project_script.R")
source("C:/Users/EmilB/OneDrive/Escritorio/SIG/Proyecto-Cambio-Climatico-SIG/SIG_Trabajo-Final-Script.R")
# 1. Instalación y carga de paquetes
install.packages(c("tidyverse", "lubridate", "ggplot2", "dplyr", "sf", "raster", "leaflet", "plotly"))
library(tidyverse)
library(lubridate)
library(ggplot2)
library(dplyr)
library(sf)
library(raster)
library(leaflet)
library(plotly)
# 2. Carga de datos (ajustar ruta y formato según la fuente)
# Ejemplo: Carga de un dataset de temperatura
climate_data <- read.csv("dataset/SNPPVIIRS.Counts.nZones.40.csv")
View(climate_data)
# 3. Exploración inicial de los datos
head(climate_data)
summary(climate_data)
# 2. Carga de datos (ajustar ruta y formato según la fuente)
climate_data <- read.csv("dataset/climate_data.csv")
View(climate_data)
# 3. Exploración inicial de los datos
head(climate_data)
summary(climate_data)
# 4. Limpieza de datos
climate_data_clean <- climate_data %>%
filter(!is.na(Temperature), !is.na(Precipitation)) %>%
mutate(Date = ymd(Date))
View(climate_data)
# 2. Carga de datos (ajustar ruta y formato según la fuente)
climate_data <- read.csv("dataset/climate_data.csv")
View(climate_data)
# 3. Exploración inicial de los datos
head(climate_data)
summary(climate_data)
# 5. Análisis Exploratorio
# Gráfico de temperatura a lo largo del tiempo
ggplot(climate_data_clean, aes(x = Date, y = Temperature)) +
geom_line(color = "red") +
labs(title = "Evolución de la Temperatura", x = "Fecha", y = "Temperatura (°C)")
# 4. Limpieza de datos
climate_data_clean <- climate_data %>%
filter(!is.na(Temperature), !is.na(Precipitation)) %>%
mutate(Date = ymd(Date))
# 3. Exploración inicial de los datos
head(climate_data)
# 5. Análisis Exploratorio
# Gráfico de temperatura a lo largo del tiempo
ggplot(climate_data_clean, aes(x = Date, y = Temperature)) +
geom_line(color = "red") +
labs(title = "Evolución de la Temperatura", x = "Fecha", y = "Temperatura (°C)")
# 6. Identificación de regiones críticas (por ejemplo, aumento extremo de temperatura)
critical_regions <- climate_data_clean %>%
group_by(Region) %>%
summarise(Mean_Temperature = mean(Temperature)) %>%
filter(Mean_Temperature > quantile(Mean_Temperature, 0.9))
View(critical_regions)
print(critical_regions)
# 7. Propuestas de mitigación (ideas)
propuestas <- data.frame(
Region = critical_regions$Region,
Propuesta = c("Reforestación", "Cambio en prácticas agrícolas", "Urbanismo sostenible")
)
View(propuestas)
print(propuestas)
print(critical_regions)
# 8. Informe Final (Generación de archivo)
write.csv(critical_regions, "critical_regions.csv")
write.csv(propuestas, "propuestas_mitigacion.csv")
cat("Informe generado: Identificación de regiones críticas y propuestas de mitigación\n")
# Gráfico de temperatura a lo largo del tiempo
ggplot(climate_data_clean, aes(x = Date, y = Temperature)) +
geom_line(color = "red") +
labs(title = "Evolución de la Temperatura", x = "Fecha", y = "Temperatura (°C)")
# 2. Carga de datos (ajustar ruta y formato según la fuente)
climate_data <- read.csv("dataset/climate_data.csv")
# 3. Exploración inicial de los datos
head(climate_data)
summary(climate_data)
# 4. Limpieza de datos
climate_data_clean <- climate_data %>%
filter(!is.na(Temperature), !is.na(Precipitation)) %>%
mutate(Date = ymd(Date))
View(climate_data)
View(climate_data_clean)
# 2. Carga de datos (ajustar ruta y formato según la fuente)
climate_data <- read.csv("dataset/climate_data.csv")
# 3. Exploración inicial de los datos
head(climate_data)
summary(climate_data)
# 4. Limpieza de datos
climate_data_clean <- climate_data %>%
filter(!is.na(Temperature), !is.na(Precipitation)) %>%
mutate(Date = ymd(Date))
# 5. Análisis Exploratorio
# Gráfico de temperatura a lo largo del tiempo
ggplot(climate_data_clean, aes(x = Date, y = Temperature)) +
geom_line(color = "red") +
labs(title = "Evolución de la Temperatura", x = "Fecha", y = "Temperatura (°C)")
# 6. Identificación de regiones críticas (por ejemplo, aumento extremo de temperatura)
critical_regions <- climate_data_clean %>%
group_by(Region) %>%
summarise(Mean_Temperature = mean(Temperature)) %>%
filter(Mean_Temperature > quantile(Mean_Temperature, 0.9))
print(critical_regions)
# 7. Propuestas de mitigación (ideas)
propuestas <- data.frame(
Region = critical_regions$Region,
Propuesta = c("Reforestación", "Cambio en prácticas agrícolas", "Urbanismo sostenible")
)
print(propuestas)
# 8. Informe Final (Generación de archivo)
write.csv(critical_regions, "critical_regions.csv")
write.csv(propuestas, "propuestas_mitigacion.csv")
cat("Informe generado: Identificación de regiones críticas y propuestas de mitigación\n")
# 1. Instalación y carga de paquetes
install.packages(c("tidyverse", "lubridate", "ggplot2", "dplyr", "sf", "raster", "leaflet", "plotly"))
library(tidyverse)
library(lubridate)
library(ggplot2)
library(dplyr)
library(sf)
library(raster)
library(leaflet)
library(plotly)
# 2. Carga de datos (ajustar ruta y formato según la fuente)
climate_data <- read.csv("dataset/climate_data.csv")
# 3. Exploración inicial de los datos
head(climate_data)
summary(climate_data)
# 4. Limpieza de datos
climate_data_clean <- climate_data %>%
filter(!is.na(Temperature), !is.na(Precipitation)) %>%
mutate(Date = ymd(Date))
# 5. Análisis Exploratorio
# Gráfico de temperatura a lo largo del tiempo
ggplot(climate_data_clean, aes(x = Date, y = Temperature)) +
geom_line(color = "red") +
labs(title = "Evolución de la Temperatura", x = "Fecha", y = "Temperatura (°C)")
# 6. Identificación de regiones críticas (por ejemplo, aumento extremo de temperatura)
critical_regions <- climate_data_clean %>%
group_by(Region) %>%
summarise(Mean_Temperature = mean(Temperature)) %>%
filter(Mean_Temperature > quantile(Mean_Temperature, 0.9))
print(critical_regions)
# 7. Propuestas de mitigación (ideas)
propuestas <- data.frame(
Region = critical_regions$Region,
Propuesta = c("Reforestación", "Cambio en prácticas agrícolas", "Urbanismo sostenible")
)
print(propuestas)
# 8. Informe Final (Generación de archivo)
write.csv(critical_regions, "critical_regions.csv")
write.csv(propuestas, "propuestas_mitigacion.csv")
cat("Informe generado: Identificación de regiones críticas y propuestas de mitigación\n")
